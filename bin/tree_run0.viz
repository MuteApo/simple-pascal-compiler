digraph G {
	node70 [label="ProgramNode
env"];
	node70 -> node69 [color=blue, label = "block", labeltooltip = "Program Block"];
	node69 [label="BlockNode"];
	node69 -> node62 [color=blue, label = "func", labeltooltip = "Function/Procedure Part"];
	node62 [label="FuncDefListNode"];
	node62 -> node61 [color=blue, label = "func1", labeltooltip = "Function 1"];
	node61 [label="FuncDefNode
a"];
	node61 -> node60 [color=blue, label = "block", labeltooltip = "Procedure Block"];
	node60 [label="BlockNode"];
	node60 -> node10 [color=blue, label = "var", labeltooltip = "Var Part"];
	node10 [label="VarDefListNode"];
	node10 -> node11 [color=blue, label = "field1", labeltooltip = "Type of Field 1"];
	node11 [label="VarDefNode
x"];
	node11 -> node9 [color=blue, label = "vardef", labeltooltip = "Variable Definition"];
	node9 [label="TypeAttrNode
"];
	node9 -> node8 [color=blue, label = "basic", labeltooltip = "Basic Type"];
	node8 [label="BasicAttrNode
integer"];
	node60 -> node41 [color=blue, label = "func", labeltooltip = "Function/Procedure Part"];
	node41 [label="FuncDefListNode"];
	node41 -> node40 [color=blue, label = "func1", labeltooltip = "Function 1"];
	node40 [label="FuncDefNode
b"];
	node40 -> node39 [color=blue, label = "block", labeltooltip = "Procedure Block"];
	node39 [label="BlockNode"];
	node39 -> node19 [color=blue, label = "var", labeltooltip = "Var Part"];
	node19 [label="VarDefListNode"];
	node19 -> node20 [color=blue, label = "field1", labeltooltip = "Type of Field 1"];
	node20 [label="VarDefNode
x"];
	node20 -> node18 [color=blue, label = "vardef", labeltooltip = "Variable Definition"];
	node18 [label="TypeAttrNode
"];
	node18 -> node17 [color=blue, label = "basic", labeltooltip = "Basic Type"];
	node17 [label="BasicAttrNode
integer"];
	node39 -> node28 [color=blue, label = "stmts", labeltooltip = "Statement Part"];
	node28 [label="StmtListNode"];
	node28 -> node27 [color=blue, label = "stmt1", labeltooltip = "Statement 1"];
	node27 [label="StmtNode"];
	node27 -> node26 [color=blue, label = "assign", labeltooltip = "Assign Statement"];
	node26 [label="AssignStmtNode"];
	node26 -> node22 [color=blue, label = "lval", labeltooltip = "Left Value"];
	node22 [label="ExprNode
"];
	node22 -> node21 [color=blue, label = "id", labeltooltip = "Identifier"];
	node21 [label="IdNode
x"];
	node26 -> node25 [color=blue, label = "rval", labeltooltip = "Right Value"];
	node25 [label="ExprNode
"];
	node25 -> node24 [color=blue, label = "literal", labeltooltip = "Literal"];
	node24 [label="LiteralNode
integer
2"];
	node28 -> node38 [color=blue, label = "stmt2", labeltooltip = "Statement 2"];
	node38 [label="StmtNode"];
	node38 -> node37 [color=blue, label = "assign", labeltooltip = "Assign Statement"];
	node37 [label="AssignStmtNode"];
	node37 -> node30 [color=blue, label = "lval", labeltooltip = "Left Value"];
	node30 [label="ExprNode
"];
	node30 -> node29 [color=blue, label = "id", labeltooltip = "Identifier"];
	node29 [label="IdNode
x"];
	node37 -> node36 [color=blue, label = "rval", labeltooltip = "Right Value"];
	node36 [label="ExprNode
EK_Add"];
	node36 -> node32 [color=blue, label = "op1", labeltooltip = "Operand 1"];
	node32 [label="ExprNode
"];
	node32 -> node31 [color=blue, label = "id", labeltooltip = "Identifier"];
	node31 [label="IdNode
x"];
	node36 -> node35 [color=blue, label = "op2", labeltooltip = "Operand 2"];
	node35 [label="ExprNode
"];
	node35 -> node34 [color=blue, label = "literal", labeltooltip = "Literal"];
	node34 [label="LiteralNode
integer
1"];
	node60 -> node49 [color=blue, label = "stmts", labeltooltip = "Statement Part"];
	node49 [label="StmtListNode"];
	node49 -> node48 [color=blue, label = "stmt1", labeltooltip = "Statement 1"];
	node48 [label="StmtNode"];
	node48 -> node47 [color=blue, label = "assign", labeltooltip = "Assign Statement"];
	node47 [label="AssignStmtNode"];
	node47 -> node43 [color=blue, label = "lval", labeltooltip = "Left Value"];
	node43 [label="ExprNode
"];
	node43 -> node42 [color=blue, label = "id", labeltooltip = "Identifier"];
	node42 [label="IdNode
x"];
	node47 -> node46 [color=blue, label = "rval", labeltooltip = "Right Value"];
	node46 [label="ExprNode
"];
	node46 -> node45 [color=blue, label = "literal", labeltooltip = "Literal"];
	node45 [label="LiteralNode
integer
3"];
	node49 -> node59 [color=blue, label = "stmt2", labeltooltip = "Statement 2"];
	node59 [label="StmtNode"];
	node59 -> node58 [color=blue, label = "assign", labeltooltip = "Assign Statement"];
	node58 [label="AssignStmtNode"];
	node58 -> node51 [color=blue, label = "lval", labeltooltip = "Left Value"];
	node51 [label="ExprNode
"];
	node51 -> node50 [color=blue, label = "id", labeltooltip = "Identifier"];
	node50 [label="IdNode
x"];
	node58 -> node57 [color=blue, label = "rval", labeltooltip = "Right Value"];
	node57 [label="ExprNode
EK_Add"];
	node57 -> node53 [color=blue, label = "op1", labeltooltip = "Operand 1"];
	node53 [label="ExprNode
"];
	node53 -> node52 [color=blue, label = "id", labeltooltip = "Identifier"];
	node52 [label="IdNode
x"];
	node57 -> node56 [color=blue, label = "op2", labeltooltip = "Operand 2"];
	node56 [label="ExprNode
"];
	node56 -> node55 [color=blue, label = "literal", labeltooltip = "Literal"];
	node55 [label="LiteralNode
integer
1"];
	node69 -> node68 [color=blue, label = "stmts", labeltooltip = "Statement Part"];
	node68 [label="StmtListNode"];
	node68 -> node67 [color=blue, label = "stmt1", labeltooltip = "Statement 1"];
	node67 [label="StmtNode"];
	node67 -> node66 [color=blue, label = "func", labeltooltip = "Function Call Statement"];
	node66 [label="FuncStmtNode"];
	node66 -> node65 [color=blue, label = "fun call", labeltooltip = "Function Call"];
	node65 [label="FuncNode
a"];
}